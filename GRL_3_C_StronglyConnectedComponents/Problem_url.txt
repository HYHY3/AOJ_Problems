http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=GRL_3_C

Strongly Connected Components:
A direced graph is strongly connected, if every two nodes are reachable from each other.
In a strongly connected component of a directed graph, every two nodes of the component are mutually reachable.

Kosaraju algorithm:
use dfs(depth first search) twice to get a dfs tree of graph and transpose graph.

1)For each vertex u of the graph, mark u as unvisited. Let stack L be empty.
2)For each vertex u of the graph do Visit(u), where Visit(u) is the recursive subroutine:
      If u is unvisited then:
          Mark u as visited.
          For each out-neighbour v of u, do Visit(v).
          Prepend u to L.
      Otherwise do nothing.
3)For each element u of L in order, do Assign(u,u) where Assign(u,root) is the recursive subroutine:
      If u has not been assigned to a component then:
          Assign u as belonging to the component whose root is root.
          For each in-neighbour v of u, do Assign(v,root).
      Otherwise do nothing.